// ==========================================================================
// Tools / page transition
//
// mixins for page transition
//
// ==========================================================================

// mixin defaults
$page-transition-defaults: (
  color: #000,
  direction: "vertical",
  orientation: "normal",
  elements: 1,
  effect: "translate", //opacity, translate available
  effect-direction: "normal", //normal or reverse - work for translate only
  speed: 0.4s,
  delay: 0.05,
  easeShow: ease-out,
  easeHide: ease-in
);

@mixin page-transition($selector, $parameters: ()) {
  // merge with default options
  $params: map-merge($page-transition-defaults, $parameters);

  // options
  $color: map-get($params, color);
  $direction: map-get($params, direction);
  $orientation: map-get($params, orientation);
  $elements: map-get($params, elements);
  $effect: map-get($params, effect);
  $effect-direction: map-get($params, effect-direction);
  $speed: map-get($params, speed);
  $delay: map-get($params, delay);
  $easeShow: map-get($params, easeShow);
  $easeHide: map-get($params, easeHide);
  $flex-direction: "";
  $animHideFrom: "";
  $animShowTo: "";

  //direction
  /* stylelint-disable */
  @if $direction == "horizontal" {
    @if $orientation == "reverse" {
      $flex-direction: column-reverse;
    } @else {
      $flex-direction: column;
    }
  } @else {
    @if $orientation == "reverse" {
      $flex-direction: row-reverse;
    } @else {
      $flex-direction: row;
    }
  }
  /* stylelint-enable */

  #{$selector} {
    position: fixed;
    //transform: translate(0, 0);
    width: 100%;
    height: 100vh;
    margin: 0;
    padding: 0;
    z-index: $z-index-page-trans;
    display: flex;
    flex-direction: $flex-direction;
    pointer-events: none; //change to z-index:-1 after transition

    span {
      position: relative;
      flex-grow: 1;
      background-color: $color;
      animation: page-trans-show-#{$effect} $speed $easeShow both;

      @include stagger-delay($elements, 0, $delay);
    }

    .p-trans-out & {
      span {
        animation: none;
      }
    }

    /* .page-trans-completed & {
      transform: translate(0, 100%);
    } */

    .p-trans-in & {
      span {
        animation: page-trans-hide-#{$effect} $speed $easeHide both;

        @include stagger-delay($elements, 0, $delay);
      }
    }

    .p-trans-in-completed & {
      span {
        opacity: 1 !important;
      }
    }
  }

  /* stylelint-disable */
  @if $direction == "horizontal" {
    @if $effect-direction == "reverse" {
      $animHideFrom: "100%, 0";
      $animShowTo: "-100%, 0"
    } @else {
      $animHideFrom: "-100%, 0";
      $animShowTo: "100%, 0";
    }
  } @else {
    @if $effect-direction == "reverse" {
      $animHideFrom: "0, -100%";
      $animShowTo: "0, 100%";
    } @else {
      $animHideFrom: "0, 100%";
      $animShowTo: "0, -100%";
    }
  }
  /* stylelint-enable */

  @keyframes page-trans-hide-translate {
    from {
      transform: translate(#{$animHideFrom});
    }

    to {
      transform: translate(0, 0);
    }
  }

  @keyframes page-trans-show-translate {
    from {
      transform: translate(0, 0);
    }

    to {
      transform: translate(#{$animShowTo});
    }
  }

  @keyframes page-trans-hide-opacity {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }

  @keyframes page-trans-show-opacity {
    0% {
      opacity: 1;
    }

    100% {
      opacity: 0;
    }
  }
}
